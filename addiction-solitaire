#!/usr/bin/env python3

# Addiction Solitaire
#
# Copyright (C) 2019, Tarun Prabhu <tarun.prabhu@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

import argparse
from enum import Enum, unique, auto

from addiction.game import Game
from addiction.gtk.ui import GameGtk
from addiction.gtk.dialog import SettingsGtk
from addiction.qt.ui import GameQt
from addiction.qt.dialog import SettingsQt
from addiction.text.ui import GameText


@unique
class Mode(Enum):
    Gtk = auto()
    Qt = auto()
    Text = auto()

# os.path => 
def load_settings_from_file(filename):
    pass
    
# None => int
def main():
    parser = argparse.ArgumentParser('Addiction solitaire game')
    parser.set_defaults(mode = Mode.Gtk)

    ui = parser.add_subparsers()

    gtk = ui.add_parser('gtk', help = 'gtk help')
    gtk.set_defaults(mode = Mode.Gtk)

    qt = ui.add_parser('qt', help = 'qt help')
    qt.set_defaults(mode = Mode.Qt)

    text = ui.add_parser('text', help = 'text help')
    text.add_argument('-s', '--shuffles', type = int,
                      dest = 'shuffles',
                      help = ('Maximum number of shuffles '
                              '(-1 for unlimited shuffles)'))
    text.add_argument('-m', '--no-movable', default = True,
                      dest = 'highlight_movable', action='store_false', 
                      help = ('Do not highlight movable cards'))
    text.add_argument('-c', '--no-correct', default = True,
                      dest = 'highlight_correct', action='store_false',
                      help = ('Do not highlight correct cards'))
    text.set_defaults(mode = Mode.Text)

    args = parser.parse_args()

    game = None
    if args.mode == Mode.Gtk:
        game = Game(GameGtk)
    elif args.mode == Mode.Qt:
        game = Game(GameQt)
    elif args.mode == Mode.Text:
        game = Game(GameText)
    game.main()
    
    return 0

if __name__ == '__main__':
    exit(main())
